---
# - name: print vars
#   hosts: all
#   gather_facts: false
#   tasks:
#   - debug:
#       msg:
#         - "{{inventory_hostname}}.{{lab_domain_name}}"
#         - "{{ip_address|default('')}}"

#   # ---
- name: Build pfSense VMs
  hosts: pfsense
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: build_from_iso_pfsense
      vars:
        vm_name:         "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_datastore:    "{{lab_vm_datastore}}"
        vm_password_new: "{{lab_password}}"

- name: Build DC
  hosts: dc
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: build_from_iso_windows
      vars:
        vm_name:         "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_datastore:    "{{lab_vm_datastore}}"
        vm_network:      "{{lab_lan1_portgroup}}"
        vm_password_new: "{{lab_password}}"
        vm_hostname:     "{{inventory_hostname}}"
        vm_address:      "{{ip_address}}"
        vm_netmask_cidr: "{{lab_lan1_netmask_cidr}}"
        vm_gateway:      "{{lab_lan1_gateway}}"
        vm_dns_server:   "{{lab_lan1_dns_ip}}"
        vm_domain:       "{{lab_domain_name}}"
        dcpromo: true

# This play takes all the name/ip pairs from all hosts and adds DNS records on the DC
- name: populate DNS records
  hosts: all
  serial: 1
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
  - name: Add DNS record via vm shell
    community.vmware.vmware_vm_shell:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      vm_username: ".\\Administrator"
      vm_password: "{{lab_password}}"
      vm_id: "{{lab_prefix | default('')}}{{lab_domain_controller}}"
      vm_shell: 'c:\windows\system32\windowspowershell\v1.0\powershell.exe'
      vm_shell_args: " -command \"({{item}})\""
      wait_for_process: true
    delegate_to: localhost
    retries: 3
    delay: 10
    register: result
    until: result is succeeded
    ignore_errors: yes
    loop:
      - "Add-DnsServerResourceRecordA -Name {{inventory_hostname}} -ZoneName {{lab_domain_name}} -AllowUpdateAny -IPv4Address {{ip_address}} -TimeToLive 01:00:00"
    when: lab_domain_controller|default("") != ""

# Build vCenter Server(s)
- name: Build vCenter
  hosts: vcenter
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: deploy_ovf_vcenter
      vars:
        #ovf_file: "{{ vcenter_ova }}"
        #ovf_file: "{{ ova_file }}"
        # vcenter_address: "{{ esxi_address }}"
        # vcenter_username: root
        vm_name: "{{ lab_prefix | default('') }}{{inventory_hostname}}"
        vm_datastore: '{{ lab_vm_datastore }}'
        vm_hostname: '{{inventory_hostname}}'
        vm_domain: '{{lab_domain_name}}'
        vm_network: '{{lab_lan1_portgroup}}'
        vm_password: '{{lab_password}}'
        vm_net_mode: "static" # static or dhcp
        vm_address: '{{ip_address}}'
        vm_netmask_cidr: '{{lab_lan1_netmask_cidr}}'
        vm_dns_server: '{{lab_lan1_dns_ip}}'
        vm_gateway: '{{lab_lan1_gateway}}'

- name: Build Nested ESX from ISO
  hosts: esx
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
    - include_role:
        name: build_from_iso_esx
      vars:
        vm_hostname: "{{inventory_hostname}}"
        vm_address: "{{ip_address}}"
        vm_name: "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_network: "{{lab_lan1_portgroup}}"
        vm_password_new: "{{lab_password}}"
        vm_netmask: "{{lab_lan1_netmask}}"
        vm_netmask_cidr: "{{lab_lan1_netmask_cidr}}"
        vm_gateway: "{{lab_lan1_gateway}}"
        vm_dns_server: "{{lab_lan1_dns_ip}}"
        vm_domain: "{{lab_domain_name}}"
        vm_datastore: "{{lab_vm_datastore}}"
        # vm_username: 'root'
        vm_password: '{{lab_password}}'

# Build ESXi Server(s)
- name: Build Nested ESXi from OVA
  hosts: nestedesx
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: deploy_ovf_esxi
      vars:
        ovf_version: "{{esx_version}}" #7.0u1, 7.0, 6.7u3, 6.7u2, 6.7u1, 6.7 ... 6.0?
        vm_name:      "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_network:   "{{ lab_lan1_portgroup }}"
        vm_datastore: "{{ lab_vm_datastore }}"
        ovf_hostname: "{{ inventory_hostname }}"
        ovf_address:  "{{ ip_address }}"
        ovf_netmask:  "{{ lab_lan1_netmask }}"
        ovf_gateway:  "{{ lab_lan1_gateway }}"
        ovf_vlan: ""
        ovf_dns:      "{{ lab_lan1_dns_ip }}"
        ovf_domain:   "{{lab_domain_name}}"
        ovf_ntp:      "{{lab_lan1_gateway}}"
        ovf_syslog: "" # IP of syslog server
        ovf_password: "{{lab_password}}"
        ovf_ssh:      "{{enable_ssh|string}}"
        ovf_createvmfs: "{{create_local_vmfs|string}}"

# Build Nested ESX hosts defined in the inventory file
- name: Build Nested ESXI from OVA
  hosts: oldnestedesx
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
    - set_fact:
        ovf_file: 'files/Nested_ESXi{{esx_version}}_Appliance_Template_v1.ova'
      when:
        - esx_version|default("")|string != ""
        - ovf_file|default("")|string == ""
    - set_fact:
        ovf_url: 'https://download3.vmware.com/software/vmw-tools/nested-esxi/Nested_ESXi{{esx_version}}_Appliance_Template_v1.ova'
      when:
        - esx_version|default("")|string != ""
        - ovf_url|default("")|string == ""
    - debug:
        msg:
          - "ovf_file: {{ovf_file}}"
          - "ovf_url : {{ovf_url}}"
    - include_tasks: tasks/Build_Nested_ESXi_from_OVA.yml
      vars:
        ovf_version: "{{esx_version}}" #7.0u1, 7.0, 6.7u3, 6.7u2, 6.7u1, 6.7 ... 6.0?
        #ovf_file: "{{ ovf_file }}"
        #ovf_url: "{{ ovf_url }}"
        vm_name:      "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_network:   "{{ lab_lan1_portgroup }}"
        vm_datastore: "{{ lab_vm_datastore }}"
        # vm_memory_mb: "{{memory_mb}}"
        # vm_num_cpus: 2
        ovf_hostname: "{{ inventory_hostname }}"
        ovf_address:  "{{ ip_address }}"
        ovf_netmask:  "{{ lab_lan1_netmask }}"
        ovf_gateway:  "{{ lab_lan1_gateway }}"
        ovf_vlan: ""
        ovf_dns:      "{{ lab_lan1_dns_ip }}"
        ovf_domain:   "{{lab_domain_name}}"
        ovf_ntp:      "{{lab_lan1_gateway}}"
        ovf_syslog: "" # IP of syslog server
        ovf_password: "{{lab_password}}"
        ovf_ssh:      "{{enable_ssh|string}}"
        ovf_createvmfs: "{{create_local_vmfs|string}}"

- name: Build Windows Servers
  hosts: winservers
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: build_from_iso_windows
      vars:
        vm_name: "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_datastore: "{{lab_vm_datastore}}"
        vm_network: "{{lab_lan1_portgroup}}"
        vm_password_new: "{{lab_password}}"
        vm_hostname: "{{inventory_hostname}}"
        vm_address: "{{ip_address}}"
        vm_netmask: "{{lab_lan1_netmask}}"
        vm_netmask_cidr: "{{lab_lan1_netmask_cidr}}"
        vm_gateway: "{{lab_lan1_gateway}}"
        vm_dns_server: "{{lab_lan1_dns_ip}}"
        vm_domain: "{{lab_domain_name}}"

- name: Build Centos VMs
  hosts: centos
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
    - include_vars: vars/rhsm_secrets.yml
      ignore_errors: true
    - include_role:
        name: build_from_iso_centos
      vars:
        vm_hostname: "{{inventory_hostname}}"
        vm_address: "{{ip_address}}"
        vm_name: "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_network: "{{lab_lan1_portgroup}}"
        vm_password_new: "{{lab_password}}"
        vm_netmask: "{{lab_lan1_netmask}}"
        vm_netmask_cidr: "{{lab_lan1_netmask_cidr}}"
        vm_gateway: "{{lab_lan1_gateway}}"
        vm_dns_server: "{{lab_lan1_dns_ip}}"
        vm_domain: "{{lab_domain_name}}"
        vm_datastore: "{{lab_vm_datastore}}"
        # vm_username: 'root'
        vm_password: '{{lab_password}}'

- name: Build Ubuntu VMs
  hosts: ubuntu
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: build_from_iso_ubuntu
      vars:
        vm_hostname: "{{inventory_hostname}}"
        vm_address: "{{ip_address}}"
        vm_name: "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_network: "{{lab_lan1_portgroup}}"
        vm_password_new: "{{lab_password}}"
        vm_netmask: "{{lab_lan1_netmask}}"
        vm_netmask_cidr: "{{lab_lan1_netmask_cidr}}"
        vm_gateway: "{{lab_lan1_gateway}}"
        vm_dns_server: "{{lab_lan1_dns_ip}}"
        vm_domain: "{{lab_domain_name}}"
        vm_datastore: "{{lab_vm_datastore}}"
        # vm_username: 'root'
        vm_password: '{{lab_password}}'

- name: Build Proxmox VMs
  hosts: proxmox
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: build_from_iso_proxmox
      vars:
        vm_hostname: "{{inventory_hostname}}"
        vm_address: "{{ip_address}}"
        vm_name: "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_network: "{{lab_lan1_portgroup}}"
        vm_password_new: "{{lab_password}}"
        vm_netmask_cidr: "{{lab_lan1_netmask_cidr}}"
        vm_gateway: "{{lab_lan1_gateway}}"
        vm_dns_server: "{{lab_lan1_dns_ip}}"
        vm_domain: "{{lab_domain_name}}"
        vm_datastore: "{{lab_vm_datastore}}"
        vm_username: 'root'
        vm_password: '{{lab_password}}'

- name: Build XCP-NG VMs
  hosts: xcpng
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: build_from_iso_xcpng
      vars:
        vm_hostname: "{{inventory_hostname}}"
        vm_address: "{{ip_address}}"
        vm_name: "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_network: "{{lab_lan1_portgroup}}"
        vm_password_new: "{{lab_password}}"
        vm_netmask: "{{lab_lan1_netmask}}"
        vm_gateway: "{{lab_lan1_gateway}}"
        vm_dns_server: "{{lab_lan1_dns_ip}}"
        vm_domain: "{{lab_domain_name}}"
        vm_datastore: "{{lab_vm_datastore}}"
        vm_username: 'root'
        vm_password: '{{lab_password}}'

- name: Build ONTAP Simulator from OVA on VMware
  hosts: vsims
  #strategy: free # this strategy isn't working on PVE
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
    - set_fact:
        partner_name: "{{ lab_name }}_{{ partner }}"
      when: partner|default("") != ""
    - include_role:
        name: deploy_ovf_vsim
      vars:
        vm_name:         "{{ lab_name }}_{{ inventory_hostname }}"
        vm_datastore:    "{{ lab_vm_datastore }}"
        data_network:    "{{ lab_lan1_portgroup }}"
        cluster_network: "{{ lab_lan2_portgroup | default(lab_lan1_portgroup) }}"
        # node setup vars
        node_name:          "{{ inventory_hostname }}"
        partner_node_name:  "{{ partner|default('') }}"
        ontap_node_mgmt_ip: "{{ ip_address }}"
        ontap_netmask:      "{{ lab_lan1_netmask }}"
        ontap_gateway:      "{{ lab_lan1_gateway }}"
        # cluster setup vars
        ontap_cluster_mgmt_ip: "{{ cluster_mgmt_ip| default('') }}"
        ontap_cluster_name:    "{{ cluster_name | default('ONTAP') }}"
        ontap_password:        "{{ lab_password |default('netapp123') }}"
        ontap_dns_domain:      "{{ lab_domain_name }}"
        ontap_dns_server:      "{{ lab_lan1_dns_ip }}"
        ontap_location:        "{{ lab_name }}"
      when: 
        - vcenter_address|default(esxi_address|default('')) != ''
        - pve_address|default('') == ''

- name: Build ONTAP Simulator from OVA on PVE
  hosts: vsims
  #strategy: free # this strategy isn't working on PVE
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
    - set_fact:
        partner_name: "{{ lab_name }}_{{ partner }}"
      when: partner|default("") != ""
    - include_role:
        name: deploy_ovf_vsim
      vars:
        vm_name:         "{{ lab_name }}_{{ inventory_hostname }}"
        vm_datastore:    "{{ lab_vm_datastore }}"
        data_network:    "{{ lab_lan1_portgroup }}"
        cluster_network: "{{ lab_lan2_portgroup | default(lab_lan1_portgroup) }}"
        # node setup vars
        node_name:          "{{ inventory_hostname }}"
        ontap_node_mgmt_ip: "{{ ip_address }}"
        ontap_netmask:      "{{ lab_lan1_netmask }}"
        ontap_gateway:      "{{ lab_lan1_gateway }}"
        # cluster setup vars
        ontap_cluster_mgmt_ip: "{{ cluster_mgmt_ip| default('') }}"
        ontap_cluster_name:    "{{ cluster_name | default('ONTAP') }}"
        ontap_password:        "{{ lab_password |default('netapp123') }}"
        ontap_dns_domain:      "{{ lab_domain_name }}"
        ontap_dns_server:      "{{ lab_lan1_dns_ip }}"
        ontap_location:        "{{ lab_name }}"
      when: 
        - pve_address|default('') != ''

- name: Build ONTAP Select eval cluster
  hosts: ontapselecteval
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  roles:
    - role: deploy_ovf_ontapselecteval
      vars:
        vm_name:               "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_datastore:          "{{lab_vm_datastore}}"
        vm_network:            "{{lab_lan1_portgroup}}"
        ontap_netmask:         "{{lab_lan1_netmask}}"
        ontap_gateway:         "{{lab_lan1_gateway}}"
        ontap_password:        "{{lab_password |default('netapp123')}}"
        ontap_dns_domain:      "{{lab_domain_name}}"
        ontap_dns_server:      "{{lab_lan1_dns_ip}}"

- name: Build StorageGrid from ova
  hosts: storagegrid
  gather_facts: false
  roles:
    - role: deploy_ovf_storagegrid
      vars:
        vm_name:               "{{lab_prefix | default('')}}{{inventory_hostname}}"
        ovf_hostname:          "{{inventory_hostname}}"
        vm_datastore:          "{{lab_vm_datastore}}"
        grid_network_name:     "{{lab_lan1_portgroup}}"
        grid_network_config:   "STATIC" # "STATIC", "DHCP"
        grid_network_ip:       "{{ip_address}}"
        grid_network_mask:     "{{lab_lan1_netmask}}"
        grid_network_gateway:  "{{lab_lan1_gateway}}"
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"

- name: Build AIQUM from OVA
  hosts: aiqum
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
  - include_role:
      name: deploy_ovf_aiqum
    vars:
      # ovf_file: "files/AIQUM/ActiveIQUnifiedManager-9.9.ova"
      vm_name:          "{{lab_prefix | default('')}}{{inventory_hostname}}"
      vm_fqdn:          "{{inventory_hostname}}.{{lab_domain_name}}"
      vm_username:      "admin"
      vm_password:      "{{lab_password |default('netapp123')}}"
      vm_datastore:     "{{lab_vm_datastore}}"
      vm_network:       "{{lab_lan1_portgroup}}"
      vm_address:       "{{ip_address}}"
      vm_netmask:       "{{lab_lan1_netmask}}"
      vm_gateway:       "{{lab_lan1_gateway}}"
      vm_primary_dns:   "{{lab_lan1_dns_ip}}"
      vm_secondary_dns: "{{lab_lan1_gateway}}"
    when: 
      - pve_address|default('') != ''
      - ovf_file|default('') != ''

- name: Build AIQUM on linux
  hosts: aiqum
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
    - include_vars: vars/rhsm_secrets.yml
      ignore_errors: true
    - include_role:
        name: build_from_iso_centos
      vars:
        # regular linux role 
        vm_hostname: "{{inventory_hostname}}"
        vm_address: "{{ip_address}}"
        vm_name: "{{lab_prefix | default('')}}{{inventory_hostname}}"
        vm_network: "{{lab_lan1_portgroup}}"
        vm_password_new: "{{lab_password}}"
        vm_netmask: "{{lab_lan1_netmask}}"
        vm_netmask_cidr: "{{lab_lan1_netmask_cidr}}"
        vm_gateway: "{{lab_lan1_gateway}}"
        vm_dns_server: "{{lab_lan1_dns_ip}}"
        vm_domain: "{{lab_domain_name}}"
        vm_datastore: "{{lab_vm_datastore}}"
        # vm_username: 'root'
        vm_password: '{{lab_password}}'
        # AIQUM defaults:
        distro: "{{linux_distro | default('rocky') }}"
        version: "{{linux_version | default('9.4') }}"
        vm_memory_mb: 16384
        vm_num_cpus: 4
        vm_disk_gb: 200
        install_xrdp: true
        extra_files:
          - "{{ install_file | default('') }}"
        extra_commands:
          # copy the install from the cdrom
          - "mkdir /mnt/cdrom"
          - "mount /dev/sr1 /mnt/cdrom"
          - "cp /mnt/cdrom/files/* /home/admin/"
          - "umount /mnt/cdrom"
          - "rm -rf /mnt/cdrom"
          - unzip /home/admin/ActiveIQUnifiedManager-*.zip -d /home/admin
          - "dnf install -y epel-release"
          - wget  http://repo.mysql.com/yum/mysql-8.4-community/el/8/x86_64/mysql84-community-release-el8-1.noarch.rpm
          - "dnf install -y mysql84-community-release-el8-1.noarch.rpm"
          - "dnf install -y /home/admin/*.rpm"
          - "firewall-cmd --permanent --add-port=443/tcp"
          - "firewall-cmd --reload"
      when: 
        - install_file|default('') != ''

- name: Deploy OVF files
  hosts: ovf
  gather_facts: false
  vars_files:
    - defaults/main.yml
    - "{{ mainvars }}"
  tasks:
  - vmware_deploy_ovf:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      datacenter: '{{ vcenter_datacenter }}'
      cluster: '{{ vcenter_cluster }}'
      datastore: "{{lab_vm_datastore}}"
      name: "{{lab_prefix | default('')}}{{inventory_hostname}}"
      ovf: '{{ ovf_file }}'
      disk_provisioning: thin
      power_on: yes
      wait_for_ip_address: false
      networks: "{{ovf_networks}}"
      inject_ovf_env: true
      properties: "{{ovf_properties}}"
    delegate_to: localhost
    retries: 10
    delay: 60
    register: result
    until: result is succeeded
    when: #only run on VMware
      - pve_address|default('') != ''