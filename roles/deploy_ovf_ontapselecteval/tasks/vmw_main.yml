---
- name: locate ovf file - {{ovf_file}}
  include_tasks: locate_ovf_file.yml

# customization of vm sizing is incompatible with deploying to a standalone host
# In standalone host mode it must be powered on at creation time to retain ovf environment variables
- community.vmware.vmware_deploy_ovf:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: '{{ vcenter_datacenter }}'
    cluster: '{{ vcenter_cluster }}'
    datastore: '{{ vm_datastore }}'
    name: '{{ vm_name }}'
    ovf: '{{ ovf_file }}'
    disk_provisioning: '{{vm_disk_provisioning}}'
    power_on: yes
    wait_for_ip_address: false
    networks: "{u'ONTAP Select Network':u'{{ vm_network }}',u'nat':u'{{ vm_network }}'}"
    inject_ovf_env: true
    properties:
      DeploymentOption.value: '{{ontap_deployment_option}}' # <=9.5 use 'ONTAPSelectEVAL', 9.6+ use 'ONTAPSelectEVALSmall'
      clustername: '{{ ontap_cluster_name }}'
      Data-disk: '{{ vm_data_disk_gb | string }}'
      cluster_mgmt_ipaddr: '{{ ontap_cluster_mgmt_ip }}' 
      node_mgmt_ipaddr: '{{ ontap_node_mgmt_ip }}' 
      netmask: '{{ ontap_netmask }}' 
      gateway: '{{ ontap_gateway }}' 
      node_name: '{{ ontap_cluster_name }}-01' 
      password: '{{ ontap_password }}' 

      #ovf:userConfigurable="false"
      # When deploying to standalone hosts these variables get lost if not explicitly set
      clusteroperation: "create" 
      node_count: "1" 
      serial_number: "99887766554433221113" 
      builtin_license: "MPUUAKLHSOVOGDAAAAAAAAAAAAAA,SCFVEKLHSOVOGDAAAAAAAAAAAAAA,KEQYBKLHSOVOGDAAAAAAAAAAAAAA,GIHGEKLHSOVOGDAAAAAAAAAAAAAA,EXCKFKLHSOVOGDAAAAAAAAAAAAAA,UNJRDKLHSOVOGDAAAAAAAAAAAAAA,YJSJBKLHSOVOGDAAAAAAAAAAAAAA,CSVZNKLHSOVOGDAAAAAAAAAAAAAA"
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded 
  when: vcenter_address == esxi_address

- community.vmware.vmware_deploy_ovf:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: '{{ vcenter_datacenter }}'
    cluster: '{{ vcenter_cluster }}'
    datastore: '{{ vm_datastore }}'
    name: '{{ vm_name }}'
    ovf: '{{ ovf_file }}'
    disk_provisioning: '{{vm_disk_provisioning}}'
    power_on: no
    wait_for_ip_address: false
    networks: "{u'ONTAP Select Network':u'{{ vm_network }}',u'nat':u'{{ vm_network }}'}"
    inject_ovf_env: true
    properties:
      DeploymentOption.value: '{{ontap_deployment_option}}' # <=9.5 use 'ONTAPSelectEVAL', 9.6+ use 'ONTAPSelectEVALSmall'
      clustername: '{{ ontap_cluster_name }}'
      Data-disk: '{{ vm_data_disk_gb | string }}'
      cluster_mgmt_ipaddr: '{{ ontap_cluster_mgmt_ip }}' 
      node_mgmt_ipaddr: '{{ ontap_node_mgmt_ip }}' 
      netmask: '{{ ontap_netmask }}' 
      gateway: '{{ ontap_gateway }}' 
      node_name: '{{ ontap_cluster_name }}-01' 
      password: '{{ ontap_password }}' 
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded 
  when: vcenter_address != esxi_address
  
- name: Adjust VM Sizing
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: present
    hardware:
      memory_mb: '{{ vm_memory_mb|int }}'
      num_cpus: '{{ vm_num_cpus|int }}'
#        memory_reservation_lock: true
      cpu_reservation: "{{ vm_cpu_reservation_mhz|int }}"
    # customvalues:   # <- this broke in Ansible 2.10
    #   - key: pciHole.start
    #     value: 1024  # Moving the PCI hole here gives ONTAP access to more system ram
  delegate_to: localhost
  when: vcenter_address != esxi_address

- name: Start VM
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: poweredon
    wait_for_ip_address: false
  delegate_to: localhost
  when: vcenter_address != esxi_address

- name: Wait for VMware tools to become available
  community.vmware.vmware_guest_tools_wait:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: '{{ vm_name }}'
  delegate_to: localhost
  retries: 3
  delay: 15
  register: result           
  until: result is succeeded 

- name: Wait for 60 seconds for Startup to Complete
  wait_for: timeout=60
  delegate_to: localhost


