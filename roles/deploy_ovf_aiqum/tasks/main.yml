---
- name: Check ovf_file location
  stat:
    path: "{{ovf_file | default('')}}"
  delegate_to: localhost
  register: ovf_location

- name: Check althernate ovf_file location
  stat: 
    path: "{{playbook_dir}}/files/ActiveIQUnifiedManager-{{ovf_version}}.ova"
  delegate_to: localhost
  register: ovf_playbook_dir
  when: not ovf_location.stat.exists

- set_fact: 
    ovf_file: "{{playbook_dir}}/files/ActiveIQUnifiedManager-{{ovf_version}}.ova"
  when:
    - not ovf_location.stat.exists
    - ovf_playbook_dir.stat.exists

- vmware_deploy_ovf:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: '{{ vcenter_datacenter }}'
    cluster: '{{ vcenter_cluster }}'
    datastore: '{{ vm_datastore }}'
    name: '{{ vm_name }}'
    ovf: '{{ ovf_file }}'
    disk_provisioning: "{{ vm_disk_provisioning | default('thin') }}"
    power_on: yes
    wait_for_ip_address: false
    networks: 
      'nat': '{{ vm_network }}'
    inject_ovf_env: true
    properties:
      org.linuxdistx.IPV6Auto: false
      org.linuxdistx.HostFQDN: "{{vm_fqdn}}"
      org.linuxdistx.IPAddress: "{{vm_address}}"
      org.linuxdistx.NetworkMask: "{{vm_netmask}}"
      org.linuxdistx.Gateway: "{{vm_gateway}}"
      org.linuxdistx.PrimaryDNS: "{{vm_primary_dns}}"
      org.linuxdistx.SecondaryDNS: "{{vm_secondary_dns}}"
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded 

# This happens early in the fist boot
- name: Wait for VMware tools to become available
  community.vmware.vmware_guest_tools_wait:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'     
    validate_certs: no 
    name: '{{ vm_name }}'
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result           
  until: result is succeeded 

# Allow enough time to initialize to the configuration prompts
# This timer needs tuning
- name: 'Wait for timezone prompt ({{timer1}})'
  wait_for: 
    timeout: '{{timer1}}'
  delegate_to: localhost

# Set the TimeZone Geo
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_timezone_geo | default(12) }}" #10=Pacific
  delegate_to: localhost
- name: Press ENTER
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost

# This timer also needs tuning
- name: Wait for 10 seconds
  wait_for: timeout=10
  delegate_to: localhost

# Set the TimeZone Region
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_timezone_region | default(10) }}" #10=Pacific
  delegate_to: localhost
- name: Press ENTER
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost

# This timer also needs tuning
- name: 'Wait for password prompt ({{timer2}})'
  wait_for: 
    timeout: '{{timer2}}'
  delegate_to: localhost

# now we set the admin creds - slowly
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_username}}"
  delegate_to: localhost
- name: Press ENTER
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost

# This timer also needs tuning
- name: Wait for 5 seconds
  wait_for: timeout=5
  delegate_to: localhost

# Password
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_password}}"
  delegate_to: localhost
- name: Press ENTER
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost

# This timer also needs tuning
- name: Wait for 5 seconds
  wait_for: timeout=5
  delegate_to: localhost

# Password confirmation
- name: Configure appliance via sendkey
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    string_send: "{{vm_password}}"
  delegate_to: localhost
- name: Press ENTER
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'    
    validate_certs: no 
    name: "{{ vm_name }}"
    keys_send: ENTER
  delegate_to: localhost
