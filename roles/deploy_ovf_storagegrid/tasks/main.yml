---
# Ensures all varibles are defined || defaults accordingly
# - name: Variables Processing
#   set_fact:
#     ovf_version:       "{{ ovf_version | default('11.5.0') }}"
# #    ovf_location:      "{{ ovf_location | default('{{playbook_dir}}/files/StorageGRID-Webscale-{{ovf_version}}/vsphere') }}"
#     vm_name:           "{{ vm_name | default('sgws-admin') }}"
#     grid_network_name: "{{ grid_network_name | default('VM Network') }}"
#     vm_num_cpus:       "{{ vm_num_cpus | default(4) }}"
#     vm_memory_mb:      "{{ vm_memory_mb | default(12288) }}"
#     node_type:         "{{ node_type | default('VM_Storage_Node') }}"  # "VM_Storage_Node", Default="VM_Admin_Node", "VM_API_Gateway", "VM_Archive_Node"
#     admin_role:        "{{ admin_role | default('Primary') }}"  # Primary, Non-Primary
#     storage_disk_size: "{{ storage_disk_size | default(200) }}"

- name: Check ovf_location1
  stat:
    path: "{{ovf_location | default('')}}"
  delegate_to: localhost
  register: ovf_location1

- name: Check ovf_location2
  stat:
    path: "{{playbook_dir}}/files/StorageGRID-Webscale-{{ovf_version}}/vsphere"
  delegate_to: localhost
  register: ovf_location2

- name: Check ovf_location3
  stat:
    path: "{{role_path}}/files/StorageGRID-Webscale-{{ovf_version}}/vsphere"
  delegate_to: localhost
  register: ovf_location3

- name: use role_path
  set_fact:
    ovf_location: "{{role_path}}/files/StorageGRID-Webscale-{{ovf_version}}/vsphere"
  when: 
    - ovf_location3.stat.exists
    - not ovf_location2.stat.exists
    - not ovf_location1.stat.exists

- name: use playbook_dir
  set_fact:
    ovf_location: "{{playbook_dir}}/files/StorageGRID-Webscale-{{ovf_version}}/vsphere"
  when: 
    - ovf_location2.stat.exists
    - not ovf_location1.stat.exists

- name: Set vars for admin network 
  set_fact:
    admin_network_name: "{{ grid_network_name }}"
    admin_network_config: "DISABLED"
  when: admin_network_name is undefined

- name: Set vars for client network
  set_fact:
    client_network_name: "{{ grid_network_name }}"
    client_network_config: "DISABLED"
  when: client_network_name is undefined

- name: 'set_fact: Primary-Admin'
  set_fact:
    ovf_file:        "{{ ovf_location }}/vsphere-primary-admin.ovf"
    admin_role:      "Primary"
  when:
    - node_type == "VM_Admin_Node"
    - admin_role == "Primary" or admin_role is undefined

- name: 'set_fact: Non-Primary-Admin'
  set_fact:
    ovf_file:         "{{ ovf_location }}/vsphere-non-primary-admin.ovf"
  when:
    - node_type == "VM_Admin_Node"
    - admin_role == "Non-Primary"

- name: 'set_fact: Storage'
  set_fact:
    ovf_file:         "{{ ovf_location }}/vsphere-storage.ovf"
  when:
    - node_type == "VM_Storage_Node"

- name: 'set_fact: Gateway'
  set_fact:
    ovf_file:         "{{ ovf_location }}/vsphere-gateway.ovf"
  when:
    - node_type == "VM_API_Gateway"

- name: 'set_fact: Archive'
  set_fact:
  
    ovf_file:         "{{ ovf_location }}/vsphere-archive.ovf"
  when:
    - node_type == "VM_Archive_Node"

- vmware_deploy_ovf:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: '{{ vcenter_datacenter }}'
    cluster: '{{ vcenter_cluster }}'
    datastore: '{{ vm_datastore }}'
    name: '{{ vm_name }}'
    ovf: '{{ ovf_file }}'
    disk_provisioning: thin
    power_on: no
    wait_for_ip_address: false
    networks: "{u'Grid Network':u'{{ grid_network_name }}',u'Admin Network':u'{{ admin_network_name }}',u'Client Network':u'{{ client_network_name }}' }"
    inject_ovf_env: true
    properties:

      NODE_NAME: "{{ovf_hostname}}"
      #NODE_TYPE: "{{ node_type }}"
      #ADMIN_ROLE: "{{ admin_role }}"

      #Grid Network (eth0)
      #GRID_NETWORK_DEV: "eth0"
      GRID_NETWORK_CONFIG:  "{{ grid_network_config  | default('DHCP') }}" # "STATIC", "DHCP"
      GRID_NETWORK_IP:      "{{ grid_network_ip      | default('0.0.0.0') }}"
      GRID_NETWORK_MASK:    "{{ grid_network_mask    | default('255.255.255.255') }}"
      GRID_NETWORK_GATEWAY: "{{ grid_network_gateway | default('0.0.0.0') }}"
      GRID_NETWORK_MTU:     "{{ grid_network_mtu     | default('1400') }}"

      #Admin Network (eth1)
      #ADMIN_NETWORK_DEV: "eth1"
      ADMIN_NETWORK_CONFIG:  "{{ admin_network_config  | default('DISABLED') }}" #"DISABLED", "STATIC", "DHCP"
      ADMIN_NETWORK_IP:      "{{ admin_network_ip      | default('0.0.0.0') }}" #The IP address of this node on the admin network (0.0.0.0 if not used).
      ADMIN_NETWORK_MASK:    "{{ admin_network_mask    | default('255.255.255.255') }}" #The netmask for this node's admin network subnet.
      ADMIN_NETWORK_GATEWAY: "{{ admin_network_gateway | default('0.0.0.0') }}" #The admin network gateway for this node (must be on the admin network subnet).
      ADMIN_NETWORK_ESL:     "{{ admin_network_esl     | default('') }}" # a comma-separated list of subnets that will communicate with this node through its admin network gateway. This list will be used to create static routes. Use CIDR notation. For example, 10.10.10.0/24,192.168.100.0/24,172.16.0.0/16
      ADMIN_NETWORK_MTU:     "{{ admin_network_mtu     | default('1400') }}"
      ADMIN_IP: "{{admin_ip | default(omit)}}"

      #Client Network (eth2)
      #CLIENT_NETWORK_DEV: "eth2"
      CLIENT_NETWORK_CONFIG:  "{{ client_network_config  | default('DISABLED') }}" #"DISABLED", "STATIC", "DHCP"
      CLIENT_NETWORK_IP:      "{{ client_network_ip      | default('0.0.0.0') }}"
      CLIENT_NETWORK_MASK:    "{{ client_network_mask    | default('255.255.255.255') }}"
      CLIENT_NETWORK_GATEWAY: "{{ client_network_gateway | default('0.0.0.0') }}"
      CLIENT_NETWORK_MTU:     "{{ client_network_mtu     | default('1400') }}"

      #Advanced
      #PORT_REMAP: ""
      #PORT_REMAP_INBOUND: ""

  delegate_to: localhost
  retries: 2
  delay: 60
  register: result
  until: result is succeeded

- name: Adjust VM Disk Sizing - remove
  community.vmware.vmware_guest_disk:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ vcenter_datacenter }}'
    validate_certs: no
    name: '{{ vm_name }}'
    disk:
    - state: absent
      controller_type: lsilogic
      controller_number: 0
      unit_number: 1
    - state: absent
      controller_type: lsilogic
      controller_number: 0
      unit_number: 2
    - state: absent
      controller_type: lsilogic
      controller_number: 0
      unit_number: 3
  delegate_to: localhost
  when: node_type == "VM_Storage_Node"

- name: Adjust VM Disk Sizing - recreate
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: present
    disk:
    - size_gb: "{{ storage_disk_size|int }}"
      controller_type: lsilogic
      controller_number: 0
      unit_number: 1
      datastore: '{{ vm_datastore }}'
      type: thin
    - size_gb: "{{ storage_disk_size|int }}"
      controller_type: lsilogic
      controller_number: 0
      unit_number: 2
      datastore: '{{vm_datastore}}'
      type: thin
    - size_gb: "{{ storage_disk_size|int }}"
      controller_type: lsilogic
      controller_number: 0
      unit_number: 3
      datastore: '{{vm_datastore}}'
      type: thin
  delegate_to: localhost
  when: node_type == "VM_Storage_Node"

- name: Change T-Shirt
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: present
    hardware:
      memory_mb: '{{ vm_memory_mb|int }}'
      num_cpus: '{{ vm_num_cpus|int }}'
  delegate_to: localhost

- name: Power-On the virtual machine
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: poweredon
  delegate_to: localhost
  register: powerstate
