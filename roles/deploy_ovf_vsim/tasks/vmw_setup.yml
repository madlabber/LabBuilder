---
# Node Setup
# vmware tools come up a little early so we need to pause for a bit
- name: 'Wait for {{ node_setup_delay|default(60) }} seconds for Startup to Complete'
  wait_for: 'timeout={{ node_setup_delay|default(60) }}'
  delegate_to: localhost
  when: (ontap_node_mgmt_ip|default("") != "") or (node2_mgmt_ip|default("") != "")

- name: Complete Node Setup on node2
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: "{{ node2_name|default('') }}"
    keys_send: ENTER
    string_send: "{{ item }}"
  delegate_to: localhost
  loop:
    - "admin"
    - "cluster setup"
    - "yes"
    - "e0c" # node mgmt port
    - "{{node2_mgmt_ip|default('')}}"
    - "{{ontap_netmask}}"
    - "{{ontap_gateway}}"
    - "" # this completes the node setup phase
  when: node2_mgmt_ip|default("") != ""

# Send keys via HID to complete setup at the vidconsole
- name: Complete Node Setup
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: "{{ vm_name }}"
    keys_send: ENTER
    string_send: "{{ item }}"
  delegate_to: localhost
  loop:
    - "admin"
    - "cluster setup"
    - "yes"
    - "e0c" # node mgmt port
    - "{{ontap_node_mgmt_ip}}"
    - "{{ontap_netmask}}"
    - "{{ontap_gateway}}"
    - "" # this completes the node setup phase
  when: ontap_node_mgmt_ip|default("") != ""

# Exit the setup script
- name: 'Exit setup script on {{ vm_name }}'
  community.vmware.vmware_guest_sendkey:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: "{{ vm_name }}"
    keys_send: ENTER
    string_send: "{{ item }}"
  delegate_to: localhost
  loop:
    - "exit" # because the state may not be what we expect
    - ""
      
# Run Cluster Setup
- name: 'Run cluster setup on {{ vm_name }}'
  block:
  - name: Begin cluster setup
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{ item }}"
    delegate_to: localhost
    loop:
      - "admin" # in case we land at a login prompt
      - "{{ ontap_password }}" # in case the password has been set
      - "security login password -username admin -new-password {{ ontap_password }}"
      - "security login create -username admin -application ssh -authmethod password"
      - "system node rename -newname {{ ontap_cluster_name | default(vm_name) }}-01"
      - "cluster create -clustername {{ ontap_cluster_name | default(vm_name) }}"
      - ""
      #- "license add $VSIMLICENSE" # <- adds cluster base key (obsolete)
      - "network interface create -vserver {{ ontap_cluster_name | default(vm_name) }} -lif cluster_mgmt -role cluster-mgmt -home-node {{ ontap_cluster_name | default(vm_name) }}-01 -home-port e0c -address {{ ontap_cluster_mgmt_ip }} -netmask {{ ontap_netmask }}"
      #Jumbos don't work in Fusion, so fix the Cluster ports
      # network port broadcast-domain modify -broadcast-domain Cluster -ipspace Cluster -mtu 1500"  >> $setupfile
      #- "cluster setup" #to put us into a known state
      #- "yes"
      #- "create" # operation create|join
      #- "no" # single node cluster yes|no
      #- "yes" # use default cluster lif configuration
      #- "{{ ontap_password }}"
      #- "{{ ontap_password }}" # confirm password
      #- "{{ ontap_cluster_name | default(vm_name) }}"
      - "" # This is here to force the enter key to be pressed

  - name: 'Wait for {{ cluster_setup_delay|default(120) }} seconds before cluster setup'
    wait_for: 'timeout={{ cluster_setup_delay|default(120) }}'
    delegate_to: localhost

  # - name: Complete cluster setup
  #   community.vmware.vmware_guest_sendkey:
  #     hostname: '{{ vcenter_address }}'
  #     username: '{{ vcenter_username }}'
  #     password: '{{ vcenter_password }}'
  #     validate_certs: no
  #     name: "{{ vm_name }}"
  #     keys_send: ENTER
  #     string_send: "{{ item }}"
  #   delegate_to: localhost
  #   loop:
  #     - "e0c" # cluster mgmt port
  #     - "{{ ontap_cluster_mgmt_ip }}"
  #     - "{{ ontap_netmask }}"
  #     - "{{ ontap_gateway }}"
  #     - "{{ ontap_dns_domain }}"
  #     - "{{ ontap_dns_server }}"
  #     - "{{ ontap_location }}" # single node cluster yes|no
  #     - "" # this is here to force the enter key after the preceding command

  #add_nodes_by_serial
  - name: 'Wait for {{ add_nodes_delay|default(60) }} seconds before adding nodes'
    wait_for: 'timeout={{ add_nodes_delay|default(60) }}'
    delegate_to: localhost
    when:
      - add_nodes_by_serial|default("") != ""

# the login prompt is timing sensitive
# this is only needed for versions older than 9.8 but should be tolerated by 9.8+
  - name: login to ontap
    block:
    - name: enter username
      community.vmware.vmware_guest_sendkey:
        hostname: '{{ vcenter_address }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        validate_certs: no
        name: "{{ vm_name }}"
        keys_send: ENTER
        string_send: "{{ item }}"
      delegate_to: localhost
      loop_control:
        pause: 5
      loop:
        - "" #ENTER
        - "admin"
    - name: press enter
      community.vmware.vmware_guest_sendkey:
        hostname: '{{ vcenter_address }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        validate_certs: no
        name: "{{ vm_name }}"
        keys_send: ENTER
      delegate_to: localhost

    - name: Wait 2 seconds for command completion
      wait_for: timeout=2
      delegate_to: localhost

    - name: enter password
      community.vmware.vmware_guest_sendkey:
        hostname: '{{ vcenter_address }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        validate_certs: no
        name: "{{ vm_name }}"
        string_send: "{{ ontap_password }}"
      delegate_to: localhost

    - name: press enter
      community.vmware.vmware_guest_sendkey:
        hostname: '{{ vcenter_address }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        validate_certs: no
        name: "{{ vm_name }}"
        keys_send: ENTER
      delegate_to: localhost

    - name: Wait 2 seconds for command completion
      wait_for: timeout=2
      delegate_to: localhost

    when:
      - add_nodes_by_serial|default("") != ""

  - name: Enter systemshell
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{ item }}"
    delegate_to: localhost
    loop_control:
      pause: 5
    loop:
      - "security login unlock diag"
      - "" #ENTER
      - "set diag -confirmations off" # cluster mgmt port
      - "" #ENTER
      - "systemshell local bash"
      - "" #ENTER
    when:
      - add_nodes_by_serial|default("") != ""

  - name: run setup
    include_tasks: vmw_add_node.yml
    vars:
      item_serial: "{{item}}"
    with_items: "{{ add_nodes_by_serial.split(',') }}"
    when:
      - add_nodes_by_serial|default("") != ""

  - name: return to admin mode
    community.vmware.vmware_guest_sendkey:
      hostname: '{{ vcenter_address }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      validate_certs: no
      name: "{{ vm_name }}"
      keys_send: ENTER
      string_send: "{{ item }}"
    delegate_to: localhost
    loop:
      - "exit"
      - "set admin"
      - "" # this is here to force the enter key after the preceding command
    when:
      - add_nodes_by_serial|default("") != ""

  when: ontap_cluster_mgmt_ip|default("") != ""
  #end block:
