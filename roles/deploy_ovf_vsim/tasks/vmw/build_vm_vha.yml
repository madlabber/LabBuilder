---
- name: 'Deploy ovf file: {{ovf_file}}'
  community.vmware.vmware_deploy_ovf:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: "{{vcenter_datacenter}}"
    cluster: '{{ vcenter_cluster }}'
    datastore: "{{vm_datastore}}"
    name: "{{vm_name}}"
   # ovf: "{{ovf_file}}"
    ovf: "{{ playbook_dir }}/files/{{vm_name}}/vsim-NetAppDOT-simulate.ovf"
    disk_provisioning: "{{vm_disk_provisioning}}"
    power_on: no
    networks: "{u'hostonly':u'{{ cluster_network }}',u'nat':u'{{ data_network }}'}"
    wait_for_ip_address: false
  delegate_to: localhost
  retries: 10
  delay: 60
  register: result
  until: result is succeeded

- name: Adjust VM Sizing
  community.vmware.vmware_guest:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    name: '{{ vm_name }}'
    state: present
    hardware:
      memory_mb: "{{ vm_memory_mb}}"
      num_cpus: '{{ vm_num_cpus }}'
    advanced_settings:
      - key: pciHole.start
        value: 1024  # Moving the PCI hole here gives ONTAP access to more system ram
  delegate_to: localhost

# Tear down and rebuild the VM's Network Interfaces
- name: Tag each network adapter 
  community.vmware.vmware_guest_network:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: '{{ vcenter_datacenter }}'
    name: "{{ vm_name }}"
    label: "Network adapter {{ item }}"
    mac_address: "00:50:56:99:99:0{{ item }}"
    network_name: "{{cluster_network}}"
    device_type: e1000
    state: present
  with_items: 
   - 1
   - 2
   - 3
   - 4
  delegate_to: localhost 
  ignore_errors: true

- name: remove each network adapter 
  community.vmware.vmware_guest_network:
    hostname: '{{ vcenter_address }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datacenter: '{{ vcenter_datacenter }}'
    name: "{{ vm_name }}"
    mac_address: "00:50:56:99:99:0{{ item }}"
    state: absent
  with_items: 
   - 1
   - 2
   - 3
   - 4
  delegate_to: localhost 
  ignore_errors: true

- name: add nics
  block:
    - community.vmware.vmware_guest_network:
        hostname: "{{ vcenter_address }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        # datacenter: "{{ vcenter_datacenter }}"
        name: '{{ vm_name }}'
        state: present
        force: yes
        device_type:  "e1000"
        network_name: "{{ item.name }}"
        connected: true
        start_connected: true
      delegate_to: localhost
      with_items: "{{networks}}"
      ignore_errors: true

- set_fact:
    serial_ports:
      - type: 'pipe'
        pipe_name: '\\.\pipe\{{ vm_name}}_com1'
        endpoint: 'client'
      - type: 'pipe'
        pipe_name: '\\.\pipe\{{ vm_name}}_com2'
        endpoint: 'client'
  when:
    - serial_ports|default(false) is false

# Create serial ports
- name: Create multiple serial ports with Backing type - network, pipe, device and file
  community.vmware.vmware_guest_serial_port:
    hostname: "{{ vcenter_address }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    name: '{{ vm_name }}'
    backings: "{{serial_ports}}"
  delegate_to: localhost
  register: create_serial_ports
  when:
    - serial_ports is defined
    - serial_ports is not false

